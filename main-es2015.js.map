{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/http-interceptors/index.ts","./src/app/http-interceptors/my-interceptor.ts","./src/app/http-service/api-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {ApiServiceService} from '../app/http-service/api-service.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngtiny-editor';\n  constructor(private testservice : ApiServiceService) {\n    \n  }\n  fetchdetail(){\n    this.testservice.getdetail().subscribe(\n      (response) => {\n        console.log(response);\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<button (click)=\"fetchdetail()\" class=\"btn\">test</button>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { MyInterceptor } from './http-interceptors/my-interceptor';\nimport { httpInterceptProviders } from './http-interceptors/index'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n  //   {\n  //     provide: HTTP_INTERCEPTORS,\n  //     useClass: MyInterceptor,\n  //     multi: true\n  //   },\n    httpInterceptProviders\n  ]\n})\nexport class AppModule { }\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { ErrorHandler } from '@angular/core';\r\nimport  { MyInterceptor } from '../http-interceptors/my-interceptor';\r\n\r\nexport const httpInterceptProviders =[\r\n    {provide: HTTP_INTERCEPTORS, useClass: MyInterceptor,multi:true},\r\n    // {provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor,multi:true}\r\n]\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class MyInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token: string = localStorage.getItem('token');\r\n\r\n        if (!token) {\r\n            request = request.clone({ headers: request.headers.set('Authorization', 'Some-dummyCode') });\r\n        }\r\n\r\n        if (!request.headers.has('Content-Type')) {\r\n            request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(request).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    console.log('event--->>>', event);\r\n                }\r\n                return event;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceService {\n  constructor(private http: HttpClient) {}\n  getdetail() {\n    return this.http.get('https://jsonplaceholder.typicode.com/todos/9000');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}